<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.6 -->

<plugin>
  <name>Templates Maven Plugin</name>
  <description>Unifies all the template libraries under one POM for easier automation and to allow for more reusable and modular dependencies.</description>
  <groupId>com.google.cloud.teleport</groupId>
  <artifactId>templates-maven-plugin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <goalPrefix>templates</goalPrefix>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on templates-maven-plugin.
Call mvn templates:help -Ddetail=true -Dgoal=&lt;goal-name&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.google.cloud.teleport.plugin.maven.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If true, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>run</goal>
      <description>Goal which stages and runs a specific Template.</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>com.google.cloud.teleport.plugin.maven.TemplateRunMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>baseContainerImage</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputClassesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resourcesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <baseContainerImage implementation="java.lang.String" default-value="gcr.io/dataflow-templates-base/java11-template-launcher-base:latest"/>
        <outputClassesDirectory implementation="java.io.File" default-value="${project.build.directory}/classes">${outputClassesDir}</outputClassesDirectory>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}">${outputDir}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <resourcesDirectory implementation="java.io.File" default-value="${project.build.resources[0].directory}">${resourcesDir}</resourcesDirectory>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <targetDirectory implementation="java.io.File" default-value="${project.build.directory}">${buildDir}</targetDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>spec</goal>
      <description>Goal which generates specs required by Templates. It reads all the annotations for the Template files in the current context, parses and generates the metadata files in the target folders.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>prepare-package</phase>
      <implementation>com.google.cloud.teleport.plugin.maven.TemplateSpecsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>outputClassesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resourcesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <outputClassesDirectory implementation="java.io.File" default-value="${project.build.directory}/classes">${outputClassesDir}</outputClassesDirectory>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}">${outputDir}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <resourcesDirectory implementation="java.io.File" default-value="${project.build.resources[0].directory}">${resourcesDir}</resourcesDirectory>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <targetDirectory implementation="java.io.File" default-value="${project.build.directory}">${buildDir}</targetDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>stage</goal>
      <description>Goal which stages the Templates into Cloud Storage / Artifact Registry.
The process is different for Classic Templates and Flex Templates, please check stageClassicTemplate() and stageFlexTemplate(), respectively.
</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>com.google.cloud.teleport.plugin.maven.TemplateStageMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>baseContainerImage</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputClassesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resourcesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <baseContainerImage implementation="java.lang.String" default-value="gcr.io/dataflow-templates-base/java11-template-launcher-base:latest"/>
        <outputClassesDirectory implementation="java.io.File" default-value="${project.build.directory}/classes">${outputClassesDir}</outputClassesDirectory>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}">${outputDir}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <resourcesDirectory implementation="java.io.File" default-value="${project.build.resources[0].directory}">${resourcesDir}</resourcesDirectory>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <targetDirectory implementation="java.io.File" default-value="${project.build.directory}">${buildDir}</targetDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>validate</goal>
      <description>Goal which validates specs/annotations that are required by Templates. It parses the files and looks for Template classes, and then applies specific validations to their structure/metadata definitions.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>com.google.cloud.teleport.plugin.maven.TemplateValidateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>outputClassesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>resourcesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <outputClassesDirectory implementation="java.io.File" default-value="${project.build.directory}/classes">${outputClassesDir}</outputClassesDirectory>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}">${outputDir}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <resourcesDirectory implementation="java.io.File" default-value="${project.build.resources[0].directory}">${resourcesDir}</resourcesDirectory>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <targetDirectory implementation="java.io.File" default-value="${project.build.directory}">${buildDir}</targetDirectory>
      </configuration>
    </mojo>
  </mojos>
</plugin>